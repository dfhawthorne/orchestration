---
# ------------------------------------------------------------------------------
# Install Terraform on localhost using the procedure from
# https://developer.hashicorp.com/terraform/tutorials/oci-get-started/install-cli
#
# Also set up TerraForm for use with OCI. Procedure is from
# https://docs.oracle.com/en-us/iaas/developer-tutorials/tutorials/tf-provider/01-summary.htm
# ------------------------------------------------------------------------------

- hosts:                localhost
  tasks:
  - name:               'Set Global Variables'
    set_fact:
      hashicorp_keyring:
                        "/usr/share/keyrings/hashicorp-archive-keyring.gpg"
      oci_private_key:  "{{ ansible_env.HOME }}/.oci/oci_auburn.pem"
      oci_public_key:   "{{ ansible_env.HOME }}/.oci/oci_auburn_public.pem"
  
  - name:               'ROOT tasks for Terraform Installation'
    block:

    - name:             'Ensure packages are installed'
      ansible.builtin.apt:
        name:
          -             gnupg
          -             software-properties-common
          -             curl
          -             openssl
        state:          present
        update_cache:   yes

    - name:             'Install the HashiCorp GPG key'
      ansible.builtin.shell:
        cmd:            wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor >{{ hashicorp_keyring }}
        creates:        "{{ hashicorp_keyring }}"
      register:         hashicorp_gpg_key

    - name:             'Show results of installing HashiCorp GPG key'
      ansible.builtin.debug:
        var:            hashicorp_gpg_key.stdout_lines
      when:             hashicorp_gpg_key.stdout_lines is defined

    - name:             'Verify HashiCorp GPG key fingerprint'
      ansible.builtin.command:
        argv:
          -             "gpg"
          -             "--no-default-keyring"
          -             "--keyring"
          -             "{{ hashicorp_keyring }}"
          -             "--fingerprint"
      changed_when:     false
      register:         key_fingerprint

    - name:             'Show HashiCorp GPG key fingerprint'
      ansible.builtin.debug:
        var:            key_fingerprint.stdout_lines
      when:             key_fingerprint.stdout_lines is defined

    - name:             "Get LSB Release"
      ansible.builtin.command:
        cmd:            lsb_release -cs
      changed_when:     false
      register:         lsbrel

    - name:             "Set LSB Release Variable"
      ansible.builtin.set_fact:
        lsbrel_var:     "{{ lsbrel.stdout_lines[0] }}"

    - name:             'Add the official HashiCorp repository to your system'
      ansible.builtin.lineinfile:
        create:         yes
        group:          root
        line:           "deb [signed-by={{ hashicorp_keyring }}] https://apt.releases.hashicorp.com {{ lsbrel_var }} main"
        mode:           0644
        owner:          root
        path:           /etc/apt/sources.list.d/hashicorp.list

    - name:             'Install Terraform from from HashiCorp'
      ansible.builtin.apt:
        name:           terraform
        state:          present
        update_cache:   yes

    become:             yes
    become_user:        root

  - name:               'Verify that the installation'
    ansible.builtin.command:
      cmd:              terraform -help
    changed_when:       false
    register:           terraform_help

  - name:               'Show Result of Terraform Installation Verification'
    ansible.builtin.debug:
      var:              terraform_help.stdout_lines
    when:               terraform_help.stdout_lines is defined

  - name:               'Create Directory for OCI Configuration'
    ansible.builtin.file:
      path:             "{{ ansible_env.HOME }}/.oci"
      state:            directory
      mode:             0700

  - name:               'Generate private key for use with OCI'
    ansible.builtin.command:
      argv:
        -               "openssl"
        -               "genrsa"
        -               "-out"
        -               "{{ oci_private_key }}"
        -               "2048"
      creates:          "{{ oci_private_key }}"
    register:           gen_oci_priv_key

  - name:               'Change Permissions for OCI Private Key'
    ansible.builtin.file:
      path:             "{{ oci_private_key }}"
      state:            file
      mode:         oci_public_key    0600

  - name:               'Remove old Public Key if new OCI Private Key generated'
    ansible.builtin.file:
      path:             "{{ oci_public_key }}"
      state:            absent
    when:
      -                 gen_oci_priv_key.changed is defined
      -                 gen_oci_priv_key.changed

  - name:               'Generate public key for use with OCI'
    ansible.builtin.command:
      argv:
        -               "openssl"
        -               "rsa"
        -               "-pubout"
        -               "-in"
        -               "{{ oci_private_key }}"
        -               "-out"
        -               "{{ oci_public_key }}"
      creates:          "{{ oci_public_key }}"
    register:           gen_oci_pub_key

  - name:               'Prompt user to update OCI profile'
    ansible.builtin.debug:
      msg: 
        - Add the public key to your user account.
        - In the OCI Console's top navigation bar, click the Profile menu, and then go to User settings.
        - Click API Keys.
        - Click Add API Key.
        - Select Paste Public Keys.
        - "Paste value from {{ oci_public_key }}, including the lines with BEGIN PUBLIC KEY and END PUBLIC KEY."
        - Click Add.
        - You have now set up the RSA keys to connect to your OCI account.
    when:
      -                  gen_oci_pub_key.changed is defined
      -                  gen_oci_pub_key.changed

...
